const CONSTSYM
a IDENT
= EQUAL
10 NUMBER
; SEMI
var VARSYM
d IDENT
, COM
e IDENT
, COM
f IDENT
; SEMI
procedure PROCEDURESYM
p IDENT
; SEMI
var VARSYM
g IDENT
; SEMI
begin BEGINSYM
d IDENT
:= ASSIGN
a IDENT
* MUL
2 NUMBER
; SEMI
e IDENT
:= ASSIGN
a IDENT
/ DIV
3 NUMBER
; SEMI
if IFSYM
d IDENT
<= LTOREQ
e IDENT
then THENSYM
f IDENT
:= ASSIGN
d IDENT
+ ADD
e IDENT
end ENDSYM
; SEMI
begin BEGINSYM
read READSYM
( LPARE
e IDENT
, COM
f IDENT
) RPARE
; SEMI
write WRITESYM
( LPARE
e IDENT
, COM
f IDENT
, COM
d IDENT
) RPARE
; SEMI
call CALLSYM
p IDENT
; SEMI
while WHILESYM
odd ODD
d IDENT
do DOSYM
e IDENT
:= ASSIGN
- SUB
e IDENT
+ ADD
1 NUMBER
end ENDSYM
. END
