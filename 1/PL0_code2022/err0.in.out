const CONSTSYM 1
a IDENT 1
= EQUAL 1
10 NUMBER 1
; SEMI 1
var VARSYM 2
d IDENT 2
, COM 2
e IDENT 2
, COM 2
f IDENT 2
; SEMI 2
procedure PROCEDURESYM 3
p IDENT 3
; SEMI 3
var VARSYM 4
g IDENT 4
; SEMI 4
begin BEGINSYM 5
d IDENT 6
:= ASSIGN 6
a IDENT 6
* MUL 6
2 NUMBER 6
; SEMI 6
e IDENT 7
:= ASSIGN 7
a IDENT 7
/ DIV 7
3 NUMBER 7
; SEMI 7
if IFSYM 8
d IDENT 8
<= LTOREQ 8
e IDENT 8
then THENSYM 8
f IDENT 8
:= ASSIGN 8
d IDENT 8
+ ADD 8
e IDENT 8
end ENDSYM 9
; SEMI 9
begin BEGINSYM 10
read READSYM 11
( LPARE 11
e IDENT 11
, COM 11
f IDENT 11
) RPARE 11
; SEMI 11
write WRITESYM 12
( LPARE 12
e IDENT 12
, COM 12
f IDENT 12
, COM 12
d IDENT 12
) RPARE 12
; SEMI 12
call CALLSYM 13
p IDENT 13
; SEMI 13
while WHILESYM 14
odd ODD 14
d IDENT 14
do DOSYM 14
e IDENT 14
:= ASSIGN 14
- SUB 14
e IDENT 14
+ ADD 14
1 NUMBER 14
end ENDSYM 15
. END 15
